import java.text.SimpleDateFormat;

import java.util.Date;

 

import org.apache.log4j.BasicConfigurator

import org.apache.log4j.Level

import org.apache.log4j.Logger

import org.apache.log4j.PropertyConfigurator

 

 

public class TestGroovy implements Runnable {

 

    Double valor1,valor2;

    private Double suma_valores;

               

    private Boolean estado_groovy = true;

 

                private static boolean LOG4J = false;

                def vars=null;

                private static final Logger LOGGER = Logger.getLogger("TestGroovy");

                private static final SimpleDateFormat dateformat = new SimpleDateFormat ("yyyy.MM.dd hh:mm:ss a zzz");

 

               

                TestGroovy(){

                                /* Carga el archvo de properties para leer variables del aplicativo */

                                Properties props = new Properties()

                                File propsFile = new File('/saswork/sasprop/groovy.properties')

                                props.load(propsFile.newDataInputStream())

                                vars = new ConfigSlurper().parse(props);

                                //level = Level.toLevel(vars.groovy.log4j.level);

                                if (!LOG4J) {

                                                PropertyConfigurator.configure(vars.groovy.log4j.file);

                                                BasicConfigurator.configure();

                                                LOG4J = true;

                                }

                               

                }

               

    public void run() {

        try {

                                               

                                                if(LOGGER.isInfoEnabled())

                                                                LOGGER.info("Start: valor1: "+valor1 + " valor2: "+valor2);

 

           

                                                suma_valores=valor1+valor2;

                               

        }catch(Exception ex){

                                                estado_groovy = false;

                                                LOGGER.error("Exception - suma_valores: "+suma_valores + " - estado_groovy: " + estado_groovy,ex);

           

        }

                               

                                if(LOGGER.isInfoEnabled())

                                                LOGGER.info("End: suma_valores: "+suma_valores + " - estado_groovy: " + estado_groovy);

    }

   

    

    public Double getSuma_valores(){

        return suma_valores;

    }

   

    public Boolean getEstado_groovy() {

        return estado_groovy;

    }

   

    private String getDate(String pattern){

        SimpleDateFormat dateFormat = new SimpleDateFormat(pattern);

        Date date = new Date();

        return dateFormat.format(date);

    }

       

    private void isEmpty(String var, String varName) throws Exception{

        if(var == null){

            throw new Exception("Variable "+varName + " es Nula");

        }else if("".equals(var.trim())){

            throw new Exception("Variable "+varName + " es Vac\u00eda");

        }

    }

   

    public static void main(String[] args) {

        TestGroovy var = new TestGroovy();

        var.valor1 = 10;

        var.valor1 = 20;

        var.run();

        System.out.println("suma_valores= " + var.getSuma_valores());

    }

}
